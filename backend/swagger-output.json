{
  "openapi": "3.0.0",
  "info": {
    "title": "Hospital Management API",
    "description": "API documentation for Patient Management",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/patients/regsiterPatient": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Register a new patient",
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patient"
              },
              "example": {
                "first_name": "John",
                "last_name": "Doe",
                "phone": "9876543210",
                "email": "john@example.com",
                "date_of_birth": "1990-01-01",
                "gender": "Male",
                "blood_group": "O+",
                "address": "123 Main Street",
                "medical_history": "No prior history",
                "password": "patient123"
              }
            }
          }
        }
      }
    },
    "/api/patients/getPatients": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Get all patients",
        "description": "",
        "responses": {
          "200": {
            "description": "Returns list of patients"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/patients/{id}": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Get Patient by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns total patient details"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Patients"
        ],
        "summary": "Update patient details",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patient"
              },
              "example": {
                "first_name": "John",
                "last_name": "Doe",
                "phone": "9876543210",
                "email": "john@example.com",
                "date_of_birth": "1990-01-01",
                "gender": "Male",
                "blood_group": "O+",
                "address": "123 Main Street",
                "medical_history": "No prior history",
                "password": "patient123"
              }
            }
          }
        }
      }
    },
    "/api/employees/createEmployee": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Register a new employee",
        "description": "",
        "responses": {
          "201": {
            "description": "Employee created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "409": {
            "description": "Conflict"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Server error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "phone",
                  "employee_type"
                ],
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "employee_type": {
                    "type": "string",
                    "enum": [
                      "Nurse",
                      "Receptionist",
                      "Doctor",
                      "Admin",
                      "Accountant",
                      "House Help",
                      "Floor Warden"
                    ]
                  },
                  "department": {
                    "type": "string"
                  },
                  "salary": {
                    "type": "number"
                  },
                  "address": {
                    "type": "string"
                  },
                  "emergency_contact_name": {
                    "type": "string"
                  },
                  "emergency_contact_phone": {
                    "type": "string"
                  },
                  "date_of_joining": {
                    "type": "string",
                    "format": "date"
                  }
                }
              },
              "example": {
                "first_name": "Jane",
                "last_name": "Smith",
                "email": "jane.smith@example.com",
                "phone": "9876543210",
                "employee_type": "Doctor",
                "department": "Cardiology",
                "salary": 50000,
                "address": "123 Hospital Road",
                "emergency_contact_name": "John Smith",
                "emergency_contact_phone": "9876501234",
                "date_of_joining": "2023-05-12"
              }
            }
          }
        }
      }
    },
    "/api/employees/getEmployees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all employees",
        "description": "",
        "responses": {
          "200": {
            "description": "List of employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/employees/{employeeId}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee by ID",
        "description": "",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Employee ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/employees/updateEmployee/{employeeId}": {
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "UPdate employee",
        "description": "",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Employee created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "phone",
                  "employee_type"
                ],
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "employee_type": {
                    "type": "string",
                    "enum": [
                      "Nurse",
                      "Receptionist",
                      "Doctor",
                      "Admin",
                      "Accountant",
                      "House Help",
                      "Floor Warden"
                    ]
                  },
                  "department": {
                    "type": "string"
                  },
                  "salary": {
                    "type": "number"
                  },
                  "address": {
                    "type": "string"
                  },
                  "emergency_contact_name": {
                    "type": "string"
                  },
                  "emergency_contact_phone": {
                    "type": "string"
                  },
                  "date_of_joining": {
                    "type": "string",
                    "format": "date"
                  }
                }
              },
              "example": {
                "first_name": "Jane",
                "last_name": "Smith",
                "email": "jane.smith@example.com",
                "phone": "9876543210",
                "employee_type": "Doctor",
                "department": "Cardiology",
                "salary": 50000,
                "address": "123 Hospital Road",
                "emergency_contact_name": "John Smith",
                "emergency_contact_phone": "9876501234",
                "date_of_joining": "2023-05-12"
              }
            }
          }
        }
      }
    },
    "/api/appointments/createAppointment/": {
      "post": {
        "tags": [
          "Appointments"
        ],
        "summary": "Create a new appointment",
        "description": "",
        "responses": {
          "201": {
            "description": "Appointment created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              },
              "example": {
                "patient": "64a123456789abcdef123456",
                "doctor": "64a987654321abcdef987654",
                "visit_date": "2023-09-15",
                "visit_time": "10:30 AM",
                "visit_type": "Consultation",
                "doctor_department": "Cardiology",
                "additional_notes": "Patient experiencing mild chest pain",
                "status": "Scheduled"
              }
            }
          }
        }
      }
    },
    "/api/appointments/getAppointments/": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Fetch all appointments",
        "description": "",
        "responses": {
          "200": {
            "description": "List of appointments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/appointments/getAppointmentById/{id}": {
      "get": {
        "tags": [
          "Appointments"
        ],
        "summary": "Get an appointment by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "404": {
            "description": "Appointment not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/appointments/updateAppointment/{id}": {
      "put": {
        "tags": [
          "Appointments"
        ],
        "summary": "Update appointment details",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment updated successfully"
          },
          "404": {
            "description": "Appointment not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              },
              "example": {
                "status": "Completed",
                "additional_notes": "Consultation completed successfully"
              }
            }
          }
        }
      }
    },
    "/api/appointments/deleteAppointment/{id}": {
      "delete": {
        "tags": [
          "Appointments"
        ],
        "summary": "Delete appointment by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment deleted successfully"
          },
          "404": {
            "description": "Appointment not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/inventory/createInventory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Create a new inventory item",
        "description": "",
        "responses": {
          "201": {
            "description": "Inventory item created successfully"
          },
          "400": {
            "description": "Validation error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Inventory"
              },
              "example": {
                "brand_name": "Paracetamol",
                "generic_name": "Acetaminophen",
                "drug_category": "Analgesic",
                "form": "Tablet",
                "strength": "500mg",
                "batch_number": "BATCH123",
                "expiry_date": "2025-12-31",
                "quantity_available": 100,
                "reorder_level": 20,
                "supplier": "MediCorp Pvt Ltd",
                "purchase_date": "2023-09-01",
                "purchase_price": 2.5,
                "mrp": 5,
                "selling_price": 4.5,
                "tax_percent": 5,
                "storage_conditions": "Store in a cool and dry place",
                "cold_chain_required": false,
                "prescription_required": true
              }
            }
          }
        }
      }
    },
    "/api/inventory/getInventories": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Fetch all inventory items",
        "description": "",
        "responses": {
          "200": {
            "description": "List of inventory items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Inventory"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/inventory/getInventoryById/{id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get inventory item by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Inventory ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          },
          "404": {
            "description": "Inventory not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/inventory/updateInventory/{id}": {
      "put": {
        "tags": [
          "Inventory"
        ],
        "summary": "Update an inventory item",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Inventory ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory item updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Inventory not found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Inventory"
              },
              "example": {
                "quantity_available": 80,
                "reason_for_adjustment": "Dispensed to patients"
              }
            }
          }
        }
      }
    },
    "/api/inventory/deleteInventory/{id}": {
      "delete": {
        "tags": [
          "Inventory"
        ],
        "summary": "Delete an inventory item",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Inventory ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory item deleted successfully"
          },
          "404": {
            "description": "Inventory not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/prescriptions/createPrescription": {
      "post": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "Create a new prescription",
        "description": "",
        "responses": {
          "201": {
            "description": "Prescription created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prescription"
              },
              "example": {
                "appointment_id": "64a123456789abcdef123456",
                "patient_id": "64a654321987abcdef123123",
                "doctor_id": "64a789456321abcdef654321",
                "visit_date": "2023-09-15",
                "blood_pressure": "120/80",
                "pulse": "72",
                "height": "175 cm",
                "weight": "70 kg",
                "bmi": "22.8",
                "spo2": "98%",
                "complaints": "Headache and fatigue",
                "medicines": [
                  {
                    "name": "Paracetamol",
                    "dosage": "500mg",
                    "duration": "5 days"
                  }
                ],
                "advice": "Drink plenty of water",
                "tests_prescribed": "Blood Test",
                "next_visit": "2023-09-22",
                "doctor_notes": "Patient advised to rest",
                "status": "Draft"
              }
            }
          }
        }
      }
    },
    "/api/prescriptions/getPrescriptions": {
      "get": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "Fetch all prescriptions",
        "description": "",
        "responses": {
          "200": {
            "description": "List of prescriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Prescription"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/prescriptions/getPrescriptionById/{id}": {
      "get": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "Get prescription by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Prescription ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Prescription details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prescription"
                }
              }
            }
          },
          "404": {
            "description": "Prescription not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/prescriptions/updatePrescription/{id}": {
      "put": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "Update a prescription",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Prescription ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Prescription updated successfully"
          },
          "404": {
            "description": "Prescription not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prescription"
              },
              "example": {
                "status": "Completed",
                "doctor_notes": "Patient recovered"
              }
            }
          }
        }
      }
    },
    "/api/prescriptions/deletePrescription/{id}": {
      "delete": {
        "tags": [
          "Prescriptions"
        ],
        "summary": "Delete prescription",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Prescription ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Prescription deleted successfully"
          },
          "404": {
            "description": "Prescription not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Patient": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "last_name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "phone": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "date_of_birth": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date"
                  }
                }
              },
              "gender": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "enum": {
                    "type": "array",
                    "example": [
                      "Male",
                      "Female",
                      "Other"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "blood_group": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "address": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "medical_history": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "createdAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  }
                }
              },
              "updatedAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  }
                }
              }
            }
          },
          "required": {
            "type": "array",
            "example": [
              "first_name",
              "last_name"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Employee": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "first_name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "last_name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "phone": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "employee_type": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "department": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "salary": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "address": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "emergency_contact_name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "emergency_contact_phone": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "date_of_joining": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date"
                  }
                }
              },
              "createdAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  }
                }
              },
              "updatedAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  }
                }
              }
            }
          },
          "required": {
            "type": "array",
            "example": [
              "first_name",
              "last_name",
              "email",
              "phone",
              "employee_type"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}